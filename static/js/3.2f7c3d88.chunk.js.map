{"version":3,"sources":["components/Navbar/Dialogs/Dialog/Dialog.module.css","components/Navbar/Dialogs/Dialog/Dialog.jsx","components/Navbar/Dialogs/Message/Message.jsx","components/Navbar/Dialogs/Dialogs.jsx","hoc/withAuthRedirectComponent.js","components/Navbar/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","s","dialogItem","style","dialogImage","src","to","activeClassName","activeLink","name","Message","messageItem","message","AddMessageForm","validationSchema","yup","shape","newMessageElement","required","initialValues","onSubmit","values","setSubmitting","errors","touched","handleChange","handleBlur","isValid","dirty","handleSubmit","type","placeholder","component","onChange","onBlur","value","error","disabled","Dialogs","state","dialogsPage","dialogs","dialogArray","map","d","messages","messageArray","m","isAuth","dialog","addMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageCreator","Component","AuthRedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,8B,uHCYjBC,EATA,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,WAAlB,UACI,sBAAMF,UAAWG,IAAMC,YAAvB,SAAoC,qBAAKC,IAAI,iKAC7C,cAAC,IAAD,CAASC,GAAIR,EAAMS,gBAAiBN,IAAEO,WAAtC,SAAmDX,EAAMY,WCJtDC,EAHC,SAACb,GACb,OAAO,qBAAKG,UAAWC,IAAEU,YAAlB,SAAgCd,EAAMe,W,uBCgD3CC,EAAiB,SAAChB,GAEpB,IAAMiB,EAAmBC,MAAaC,MAAM,CACxCC,kBAAoBF,MACfG,SAAS,kBAGlB,OACI,cAAC,IAAD,CAEIC,cAAe,CAACF,kBAAoB,IAEpCG,SAAU,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cAChBzB,EAAMuB,SAASC,GACfC,GAAc,IAElBR,iBAAkBA,EARtB,SAWK,gBACKO,EADL,EACKA,OAAQE,EADb,EACaA,OAAQC,EADrB,EACqBA,QAChBC,EAFL,EAEKA,aAAcC,EAFnB,EAEmBA,WACdC,EAHL,EAGKA,QAAuBC,GAH5B,EAGcC,aAHd,EAG4BD,OAH5B,OAKG,eAAC,IAAD,WACI,8BACI,cAAC,IAAD,CAAOE,KAAK,OAAOrB,KAAK,oBAAoBsB,YAAa,qBACzDC,UAAW,WACJC,SAAUR,EAAcS,OAAQR,EAAYS,MAAOd,EAAOJ,sBAErE,8BACKO,EAAQP,mBAAqBM,EAAON,mBAAqB,mBAAGjB,UAAWC,IAAEmC,MAAhB,SAAwBb,EAAON,sBAG7F,8BACI,wBAAQa,KAAK,SAASO,UAAWV,IAAYC,EAA7C,kCAYTU,EAxFC,SAACzC,GAEb,IAAI0C,EAAQ1C,EAAM2C,YAEdC,EAAUF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAQ7C,GAAI6C,EAAE7C,GAAeU,KAAMmC,EAAEnC,MAAdmC,EAAE7C,OAC9D8C,EAAWN,EAAMO,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAyBnC,QAASmC,EAAEnC,SAAtBmC,EAAEnC,YAI3D,IAAKf,EAAMmD,OACP,OAAO,cAAC,IAAD,CAAU1C,GAAI,WAazB,OACI,sBAAKN,UAAWC,IAAEwC,QAAlB,UAEI,qBAAKzC,UAAWC,IAAEgD,OAAlB,SACKR,IAGL,sBAAKzC,UAAWC,IAAE4C,SAAlB,UACKA,EAED,cAAC,EAAD,CAAgBzB,SArBL,SAACC,GAEpBxB,EAAMqD,WAAW7B,EAAOJ,6B,2CCpB5BkC,EAA6B,SAACZ,GAAD,MAAY,CAEzCS,OAAST,EAAMa,KAAKJ,S,QCoBTK,sBACXC,aAnBoB,SAACf,GACrB,MAAO,CACHC,YAAcD,EAAMC,gBAID,SAACe,GACxB,MAAO,CACHL,WAAa,SAACjC,GACVsC,EAASC,YAAkBvC,UDRP,SAACwC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK9D,MAAMmD,OACT,cAACS,EAAD,eAAeE,KAAK9D,QADI,cAAC,IAAD,CAAUS,GAAI,eAHV,GACPsD,IAAMH,WAS1C,OAFqCH,YAAQH,EAARG,CAAoCI,KCS9DL,CAGZf","file":"static/js/3.2f7c3d88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogImage\":\"Dialog_dialogImage__248SC\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialogItem}>\r\n            <span className={style.dialogImage}><img src='https://sun9-2.userapi.com/impf/c846520/v846520252/1301eb/bDZG06vteb4.jpg?size=720x960&quality=96&proxy=1&sign=40422fa1d2c32868cacb5677440f5add&type=album'/></span>\r\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialog","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.messageItem}>{props.message}</div>\r\n}\r\nexport default Message","import s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogs = state.dialogArray.map(d => <Dialog id={d.id} key={d.id} name={d.name}/>)\r\n    let messages = state.messageArray.map(m => <Message key={m.message} message={m.message}/>)\r\n\r\n\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    let addMessageChange = (values) => {\r\n\r\n        props.addMessage(values.newMessageElement)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialog}>\r\n                {dialogs}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messages}\r\n\r\n                <AddMessageForm onSubmit={addMessageChange}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const validationSchema = yup.object().shape({\r\n        newMessageElement : yup.string()\r\n            .required('Text Message')\r\n    })\r\n\r\n    return (\r\n        <Formik\r\n\r\n            initialValues={{newMessageElement : ''}}\r\n\r\n            onSubmit={(values, {setSubmitting}) => {\r\n                props.onSubmit(values)\r\n                setSubmitting(false);\r\n            }}\r\n            validationSchema={validationSchema}\r\n\r\n        >\r\n            {({\r\n                  values, errors, touched,\r\n                  handleChange, handleBlur,\r\n                  isValid, handleSubmit, dirty\r\n            }) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field type=\"text\" name=\"newMessageElement\" placeholder={'Enter your message'}\r\n                        component={'textarea'}\r\n                               onChange={handleChange} onBlur={handleBlur} value={values.newMessageElement}/>\r\n                    </div>\r\n                    <div>\r\n                        {touched.newMessageElement && errors.newMessageElement && <p className={s.error}>{errors.newMessageElement}</p>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" disabled={!isValid && !dirty}>\r\n                            Add message\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\r\n    isAuth : state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class AuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import * as React from \"react\";\r\nimport {addMessageCreator} from \"../../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage : state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage : (newMessageElement) => {\r\n            dispatch(addMessageCreator(newMessageElement))\r\n        },\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)"],"sourceRoot":""}